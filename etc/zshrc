if [ -d $HOME/bin ]; then
	export PATH=$PATH:$HOME/bin
fi

saneGrep() {
  grep $@ | grep -v grep
}

bindkey -v # Vi-style bindings

alias -g L='|less'
alias -g G='| saneGrep'
alias -g T='|tail'
alias -g TF='tail -f'
alias -g H='|head'

alias sudosh='screen -t sudosh sudo -H -s' # TODO case this for term
alias psaux='ps aux G'
alias cl='clear'
alias mv='nocorrect mv -vi'     # no spelling correction on mv
alias cp='nocorrect cp -vi'	    # no spelling correction on cp
alias mkdir='nocorrect mkdir'	  # no spelling correction on mkdir
alias rm='rm -vi'       				# imteractive RM
alias ls="ls --color=auto -Fhb -T 0" 
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias clls="clear;ls --color -F -b -T 0 -h"

setopt CORRECT # Spelling correction

# Color definitions
RED="%{\e[1;31m%}"
GREEN="%{\e[1;32m%}"
YELLOW="%{\e[1;33m%}"
BLUE="%{\e[1;34m%}"
PINK="%{\e[1;35m%}"
CYAN="%{\e[1;36m%}"		
WHITE="%{\e[1;37m%}"

bareprompt() {
    PS1='%~%# '
    RPS1=''
    PS2=''
}

# # Functions for displaying good stuff in a terminal title
# case $TERM in
# 	xterm*|rxvt|(K|a)term)
# 	  # bindkey '\e[H' beginning-of-line # not sure if
# 	  # bindkey '\e[F' end-of-line ;;    # we need theses
# 	  precmd () {
# 		  print -Pn "\033]0;%n@%m%#  %~ %l  %w :: %T\a" 
# 	  }
# 	  preexec () {
# 		  print -Pn "\033]0;%n@%m%#  <$1>  %~ %l  %w :: %T\a" 
# 	  }
# 	;;
# esac

zle -C complete complete-word complete-files
bindkey '^X\t' complete
complete-files () { compadd - * }
ZLS_COLORS=$LS_COLORS

# set command completions
compctl -a {,un}alias
compctl -/ {c,push,pop}d
compctl -c exec
compctl -c man
compctl -c {where,which}
compctl -o {,un}setopt
compctl -E {,un}setenv
compctl -E printenv
compctl -b bindkey
compctl -j fg
compctl -j kill
compctl -u chown
compctl -g '*.(ps|eps)' gv

# Autocomplete for current dir on filetypes
compctl -g '*.Z *.gz *.tgz' + -g '*' zcat gunzip
compctl -g '*.tar.Z *.tar.gz *.tgz *.tar.bz2' + -g '*' tar
compctl -g '*.zip *.ZIP' + -g '*' unzip zip
compctl -g '*.(mp3|MP3)' + -g '*(-/)'  mpg123 xmms

setopt extendedglob
setopt nohup
setopt pathdirs

# Binding of the keys for command line editing
# bindkey '^K' kill-region
bindkey '^A' beginning-of-line
bindkey '^E' end-of-line
bindkey '^W' complete-word
bindkey '^L' clear-screen
# bindkey '\e[1~' beginning-of-line	
# bindkey '\e[4~' end-of-line

function precmd {
  local TERMWIDTH
  (( TERMWIDTH = ${COLUMNS} - 1 ))
  # Truncate the path if it's too long.
  PR_FILLBAR=""
  PR_PWDLEN=""
    
  local promptsize=${#${(%):---(%n@%m:%l)---()--}}
  local pwdsize=${#${(%):-%~}}
    
  if [[ "$promptsize + $pwdsize" -gt $TERMWIDTH ]]; then
	  ((PR_PWDLEN=$TERMWIDTH - $promptsize))
  else
	  PR_FILLBAR="\${(l.(($TERMWIDTH - ($promptsize + $pwdsize)))..${PR_HBAR}.)}"
  fi
}


setopt extended_glob
preexec () {
  case $TERM in
	  screen*)
	    local CMD=${1[(wr)^(*=*|sudo|-*)]}
	    echo -n "\ek$CMD\e\\"
    ;;
  esac
}

setprompt () {
  setopt prompt_subst          # Need this so the prompt will work.
  autoload colors zsh/terminfo # See if we can use colors.
  if [[ "$terminfo[colors]" -ge 8 ]]; then
	  colors
  fi
  for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
    eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
    eval PR_LIGHT_$color='%{$fg[${(L)color}]%}'
    (( count = $count + 1 ))
  done
  PR_NO_COLOUR="%{$terminfo[sgr0]%}"

  # See if we can use extended characters to look nicer.
  typeset -A altchar
  set -A altchar ${(s..)terminfo[acsc]}
  PR_SET_CHARSET="%{$terminfo[enacs]%}"
  PR_SHIFT_IN="%{$terminfo[smacs]%}"
  PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
  PR_HBAR=${altchar[q]:--}
  PR_ULCORNER=${altchar[l]:--}
  PR_LLCORNER=${altchar[m]:--}
  PR_LRCORNER=${altchar[j]:--}
  PR_URCORNER=${altchar[k]:--}

  # Decide if we need to set titlebar text.
  case $TERM in
	  xterm*)
	    PR_TITLEBAR=$'%{\e]0;%n@%m:%~ | ${COLUMNS}x${LINES} | %y\a%}'
	    ;;
	  screen)
	    PR_TITLEBAR=$'\ekzsh\e\\%{\e_screen \005 (\005t) | %n@%m:%~ | ${COLUMNS}x${LINES} | %y\e\\%}'
	    ;;
	  *)
	    PR_TITLEBAR=''
	    ;;
  esac
    
  # Finally, the prompt.
  PROMPT='$PR_SET_CHARSET$PR_STITLE${(e)PR_TITLEBAR}\
$PR_BLUE$PR_SHIFT_IN$PR_ULCORNER$PR_HBAR$PR_SHIFT_OUT$PR_CYAN(\
$PR_GREEN%(!.%SROOT%s.%n)@%m:%l\
$PR_CYAN)$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_HBAR${(e)PR_FILLBAR}$PR_BLUE$PR_HBAR$PR_SHIFT_OUT$PR_CYAN(\
$PR_GREEN%$PR_PWDLEN<...<%~%<<\
$PR_CYAN)$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_URCORNER$PR_SHIFT_OUT\

$PR_BLUE$PR_SHIFT_IN$PR_LLCORNER\
$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_RED%#$PR_NO_COLOUR '

  RPROMPT='$PR_BLUE$PR_SHIFT_IN$PR_SHIFT_OUT\
$PR_CYAN($PR_GREEN%D{%H:%M.%S %a, %b %d}$PR_CYAN)$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_LRCORNER$PR_SHIFT_OUT$PR_NO_COLOUR'

  PS2='$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT(\
$PR_LIGHT_GREEN%_$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT$PR_NO_COLOUR '
}

setprompt
