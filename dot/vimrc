syntax on

if has("autocmd")
	" Have Vim load indentation rules according to the detected filetype.
	filetype indent on
	filetype plugin on
endif

set showcmd    " Show (partial) command in status line.
set showmatch  " Show matching brackets.
set ignorecase " Do case insensitive matching
set smartcase  " Do smart case matching
set incsearch  " Incremental search
"set autowrite " Automatically save before commands like :next and :make
"set hidden    " Hide buffers when they are abandoned
"set mouse=a   " Enable mouse usage (all modes) in terminals
set nobackup   " Don't keep a backup file
set nohls      " no highlight while searching
set ruler

" Paste Toggling with <F12>
map <F12> setenvpastemap
set pastetoggle=<F12>

" Bind , to repeat last macro
map , @@

" Show tabs, trailing spaces, and line wraps
set list listchars=tab:^-,trail:_,extends:+,nbsp:.
set background=dark

if has("gui_running")
	set guifont=Inconsolata\ Medium\ 9,Droid\ Sans\ Mono\ 9,DejaVu\ Sans\ Mono\ 9,Bitstream\ Vera\ Sans\ Mono\ 9
	" guioptions:
	"   a - autoselect
	"   c - console dialogs
	"   e - gui tabline
	"   i - icon hint
	"   m - menubar
	"   g - grey out menu items
	"   r - right scroll always
	set guioptions=acgit
	set guiheadroom=0
endif

if has("gui_running")
	colorscheme moria
elseif $TERM =~ '256'
	colorscheme inkpot
else
	colorscheme desert
endif

let perl_include_pod = 1
let perl_want_scope_in_variables = 1
let perl_extended_vars = 1

" augroup cleanup
" au BufWritePre * :normal mz:%s/ *$//:normal 'z
" augroup END

map ; ::

set virtualedit=all

set expandtab
set tabstop=4
set shiftwidth=4

set foldmethod=indent
set swapsync=
set modeline
set nu
set laststatus=2

" C-t for new tab
map <C-T> <Esc>:tabnew<CR>

let xml_use_xhtml=1
let g:tex_flavor='latex'

set spell

" vim:set ts=2 sw=2 noexpandtab:
