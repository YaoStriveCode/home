#!/bin/sh
# Small utility to intelligently start a (sub)screen session to a remote

NESTED_ESCAPE="^Ee"
TOP_ESCAPE="^Uu"

REMOTE=$1

if [ -z $REMOTE ]; then
	echo "Missing argumet, expecting [user@]host[:port]" >&2
	exit 1
fi

case $REMOTE in *@*)
	USERNAME=${REMOTE%@*}
	REMOTE=${REMOTE#*@}
	;;
esac

case $REMOTE in *:*)
	PORT=${REMOTE#*:}
	REMOTE=${REMOTE%:*}
	;;
esac

sss=$(which sss 2>/dev/null)
if [ -n "$sss" ] && [ $? -eq 0 ]; then
	$sss $REMOTE status >/dev/null
	if [ $? -eq 1 ]; then
		echo -n "Opening master channel to $REMOTE..."
		sss $REMOTE start
		if [ $? -ne 0 ]; then
			echo "failed."
			exit 1
		fi
		echo "done."
	fi
fi

CMD="ssh -t $REMOTE"
[ ! -z "$USERNAME" ] && CMD="$CMD -l $USERNAME"
[ ! -z "$PORT" ] && CMD="$CMD -p $PORT"
CMD="$CMD screen -D -R -e $TOP_ESCAPE"

if [ "$TERM" = "screen" ]; then
	NAME=$REMOTE
	[ ! -z "$USERNAME" ] && NAME="$USERNAME@$NAME"
	[ ! -z "$PORT" ] && NAME="$NAME:$PONT"
	CMD="screen -t $NAME $CMD -e $NESTED_ESCAPE"
fi

$CMD
