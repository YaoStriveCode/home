#!/bin/bash
set -e

USAGE='<remote> [<ref> [<ref> [...]]]'
LONG_USAGE='Builds a self-extracting pack file for the remote.

If no refs are given, then all matching refs for the remote are exported.

The shell script is output on stdout.'

. "$(git --exec-path)/git-sh-setup"

[ $# -lt 1 ] && usage

remote=$1
shift

make_pack() {
    cat <<EOSCRIPT
#!/bin/sh
set -x

if [ \$# -lt 1 ]; then
    echo "Usage \$0 <remote>"
    echo
    echo "Imports the encapsulated packed objects and updates the shipped refs"
    echo "under the given remote."
    exit 1
fi

remote=\$1

base64 -d <<EOPACK | git unpack-objects
EOSCRIPT

    git pack-objects --revs --stdout --all-progress | base64

    echo EOPACK
    echo
}

if [ $# -eq 0 ]; then
    refs=$(ls .git/refs/remotes/$remote)
else
    refs=$@
fi

for ref in $refs; do
    rev=$(git rev-parse $ref)
    if from=$(git rev-parse $remote/$ref 2>/dev/null); then
        git rev-list $from..$rev
    else
        git rev-list $rev
    fi
    git update-ref -m 'Prepared Pack' refs/remotes/for/$remote/$ref $rev
done | sort | uniq | make_pack

for ref in $refs; do
    rev=$(git rev-parse $ref)
    echo "git update-ref -m 'Pack import' refs/remotes/\$remote/$ref $rev"
done
