#!/bin/sh
# Git based syncing for home data such as dot files

update_data() {
	TODIR=$1

	# Dot Files
	for ENT in dot/*; do
		DEST=$TODIR/.$(echo $ENT | sed -e 's/^dot\///')
		ETCENT=etc/$(basename $ENT)
		echo -n "$DEST: "
		if [ -f $ENT ] && [ -f $ETCENT ]; then
			[ -f $DEST ] && rm -f $DEST >/dev/null
			if cat $ETCENT $ENT >> $DEST; then
				echo "done."
			else
				echo "failed."
			fi
		else
			if rsync -a -q $ENT $DEST; then
				echo "done."
			else
				echo "failed."
			fi
		fi
	done
}

if [ -z $DOTDATADIR ]; then
	if [ -d .git ]; then
		export DOTDATADIR=$(pwd);
	elif [ -d $HOME/dotdata ]; then
		export DOTDATADIR=$HOME/dotdata
	fi
fi

if ! [ -d $DOTDATADIR ]; then
	echo "Could not determine data directory, set DOTDATADIR or execute from within" >&2
	exit 1
fi

chdir $DOTDATADIR

# TODO better etc data handling
# TODO ssh keys
# TODO don't use rsync
case $1 in
	update)
		# Update control util
		cp $0 $HOME/bin/dotdatactl

		update_data $HOME

		;;
	export)
		OUT=$2

		if [ -z $OUT ]; then
			echo "Usage $0 export <destination>" >&2
			exit 1
		fi

		DESTDIR=

		case $OUT in
			*.tar|*.tar.*)
				DESTDIR=$(mktemp -d);
				update_data $DESTDIR
				case ${OUT##*.} in
					tar)
						tar -C $DESTDIR -cf $OUT .
						;;
					gz)
						tar -C $DESTDIR -czf $OUT .
						;;
					bz2)
						tar -C $DESTDIR -cjf $OUT .
						;;
					*)
						echo "Unrecognized output file type in $OUT" >&2
						exit 1
						;;
				esac
				rm -rf $DESTDIR
				;;
			*)
				if ! [ -d $OUT ]; then
					if [ -e $OUT ]; then
						echo "$OUT exists as a non-directory" >&2
						exit 1
					fi
					echo $OUT
					mkdir $OUT -p
					update_data $OUT
				fi
				;;
		esac

		;;
	*)
		echo "Missing action to $0" >&2
		exit 1
		;;
esac
