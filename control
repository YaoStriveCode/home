#!/bin/sh
# Git based syncing for home data such as dot files

die() {
	echo $@ >&2
	exit 1
}

update_data() {
	TODIR=$1

	[ -d $TODIR ] || mkdir -p $TODIR || return 1

	# Dirs
	for dir in lib bin; do
		[ -d $TODIR/$dir ] || mkdir $TODIR/$dir
		for ENT in $dir/*; do
			if [ -f $ENT ]; then
				echo $ENT
				cp $ENT $TODIR/$dir/$(basename $ENT)
			fi
		done
	done

	# Update control util
	cp control $TODIR/bin/dotdatactl

	# Dot Files
	for ENT in dot/*; do
		DEST=$TODIR/.$(basename $ENT)
		echo -n "$DEST: "
		if [ -f $ENT ]; then
			[ -f $DEST ] && rm -f $DEST >/dev/null
			if cp $ENT $DEST >/dev/null; then
				echo "done."
			else
				echo "failed."
			fi
		else
			[ -d $DEST ] || mkdir -p $DEST
			ENT="$ENT/"
			DEST="$DEST/"
			if rsync -a -q $ENT $DEST; then
				echo "done."
			else
				echo "failed."
			fi
		fi
	done
}

if [ -z $DOTDATADIR ]; then
	if [ -d .git ]; then
		export DOTDATADIR=$(pwd);
	elif [ -d $HOME/dotdata ]; then
		export DOTDATADIR=$HOME/dotdata
	fi
fi

[ -d $DOTDATADIR ] || \
	die "Could not determine data directory, set DOTDATADIR or execute from within"

cd $DOTDATADIR

# TODO ssh keys
# TODO don't use rsync
case $1 in
	update)
		update_data $HOME || exit 1
		;;
	export)
		OUT=$2

		[ -z $OUT ] && die "Usage $0 export <destination>"

		DESTDIR=

		case $OUT in
			*.tar|*.tar.*)
				DESTDIR=$(mktemp -d);
				if update_data $DESTDIR; then
					case ${OUT##*.} in
						tar)
							tar -C $DESTDIR -cf $OUT .
							;;
						gz)
							tar -C $DESTDIR -czf $OUT .
							;;
						bz2)
							tar -C $DESTDIR -cjf $OUT .
							;;
						*)
							die "Unrecognized output file type in $OUT"
							;;
					esac
				fi
				rm -rf $DESTDIR
				;;
			*)
				if ! [ -d $OUT ]; then
					[ -e $OUT ] && die "$OUT exists as a non-directory"
					echo $OUT
					update_data $OUT || exit 1
				fi
				;;
		esac

		;;
	vimdiff)
		diffent() {
			ENT=$1
			DEST=$2
			SRC_HASH=$(md5sum $ENT | cut -d ' ' -f1)
			DEST_HASH=$(md5sum $DEST | cut -d ' ' -f1)
			if [ "$SRC_HASH" != "$DEST_HASH" ]; then
				vimdiff $ENT $DEST
			fi
		}

		# Dirs
		for dir in lib bin; do
			for ENT in $dir/*; do
				if [ -f $ENT ]; then
					diffent $ENT $HOME/$ENT
				fi
			done
		done

		# Dot Files
		for ENT in $(find dot -type f); do
			diffent $ENT $HOME/.$(echo $ENT | sed -e 's/^dot\///')
		done
		;;
	*)
		die "Missing action to $0"
		;;
esac
